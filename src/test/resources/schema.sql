-- Тестовые данные для тестирования приложения Filmorate
DROP TABLE IF EXISTS film_directors;
DROP TABLE IF EXISTS directors;
DROP TABLE IF EXISTS film_genres;
DROP TABLE IF EXISTS likes;
DROP TABLE IF EXISTS friends;
DROP TABLE IF EXISTS films;
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS genres;
DROP TABLE IF EXISTS mpa;

CREATE TABLE IF NOT EXISTS mpa (
    id BIGINT PRIMARY KEY,
    name VARCHAR(10) NOT NULL
);

CREATE TABLE IF NOT EXISTS genres (
    id BIGINT PRIMARY KEY,
    name VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR(255) NOT NULL,
    login VARCHAR(100) NOT NULL,
    name VARCHAR(255),
    birthday DATE
);

CREATE TABLE IF NOT EXISTS films (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description VARCHAR(2000),
    release_date DATE NOT NULL,
    duration INTEGER NOT NULL,
    mpa_id BIGINT REFERENCES mpa(id)
);

CREATE TABLE IF NOT EXISTS directors (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS film_directors (
    film_id BIGINT REFERENCES films(id) ON DELETE CASCADE,
    director_id BIGINT REFERENCES directors(id) ON DELETE CASCADE,
    PRIMARY KEY (film_id, director_id)
);

CREATE TABLE IF NOT EXISTS film_genres (
    film_id BIGINT REFERENCES films(id) ON DELETE CASCADE,
    genre_id BIGINT REFERENCES genres(id),
    PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS likes (
    film_id BIGINT REFERENCES films(id) ON DELETE CASCADE,
    user_id BIGINT REFERENCES users(id) ON DELETE CASCADE,
    PRIMARY KEY (film_id, user_id)
);

CREATE TABLE IF NOT EXISTS friends (
    user_id BIGINT REFERENCES users(id) ON DELETE CASCADE,
    friend_id BIGINT REFERENCES users(id) ON DELETE CASCADE,
    PRIMARY KEY (user_id, friend_id)
);

-- MPA данные
MERGE INTO mpa (id, name) VALUES (1, 'G');
MERGE INTO mpa (id, name) VALUES (2, 'PG');
MERGE INTO mpa (id, name) VALUES (3, 'PG-13');
MERGE INTO mpa (id, name) VALUES (4, 'R');
MERGE INTO mpa (id, name) VALUES (5, 'NC-17');

-- Жанры
MERGE INTO genres (id, name) VALUES (1, 'Комедия');
MERGE INTO genres (id, name) VALUES (2, 'Драма');
MERGE INTO genres (id, name) VALUES (3, 'Мультфильм');
MERGE INTO genres (id, name) VALUES (4, 'Триллер');
MERGE INTO genres (id, name) VALUES (5, 'Документальный');
MERGE INTO genres (id, name) VALUES (6, 'Боевик');

-- Тестовые фильмы (используем ID, которые не конфликтуют с тестовыми данными)
MERGE INTO films (id, name, description, release_date, duration, mpa_id)
VALUES (100, 'Властелин колец', 'Эпическое фэнтези о приключениях Фродо', '2001-12-19', 178, 3);
MERGE INTO films (id, name, description, release_date, duration, mpa_id)
VALUES (200, 'Комедия про любовь', 'Весёлая история о романтике', '2010-03-15', 95, 2);
MERGE INTO films (id, name, description, release_date, duration, mpa_id)
VALUES (300, 'Триллер в ночи', 'Напряжённый сюжет о тайнах', '2015-07-22', 120, 4);

-- Тестовые директора
MERGE INTO directors (id, name) VALUES (1, 'Питер Джексон');
MERGE INTO directors (id, name) VALUES (2, 'Стивен Спилберг');
MERGE INTO directors (id, name) VALUES (3, 'Кристофер Нолан');

-- Связи фильмов с режисёрами
MERGE INTO film_directors (film_id, director_id) VALUES (100, 1);
MERGE INTO film_directors (film_id, director_id) VALUES (200, 2);
MERGE INTO film_directors (film_id, director_id) VALUES (300, 3);

-- Жанры для фильмов
MERGE INTO film_genres (film_id, genre_id) VALUES (100, 2);
MERGE INTO film_genres (film_id, genre_id) VALUES (100, 6);
MERGE INTO film_genres (film_id, genre_id) VALUES (200, 1);
MERGE INTO film_genres (film_id, genre_id) VALUES (300, 4);

-- Тестовые пользователи
MERGE INTO users (id, email, login, name, birthday) VALUES (1000, 'user1@example.com', 'user1', 'User One', '1990-01-01');
MERGE INTO users (id, email, login, name, birthday) VALUES (1001, 'user2@example.com', 'user2', 'User Two', '1992-02-02');

-- Лайки для проверки сортировки
MERGE INTO likes (film_id, user_id) VALUES (100, 1000);
MERGE INTO likes (film_id, user_id) VALUES (100, 1001);
MERGE INTO likes (film_id, user_id) VALUES (200, 1000);